input{ file{path=>"/var/log/prepairgeo.log"
       start_position=>"beginning"
       sincedb_path=>"/dev/null" }
}
filter{
       grok {
             match => { "message" =>"%{IP:host} \- \- \[%{HTTPDATE:[@metadata][timestamp]}\] \"%{WORD:method} %{DATA:address}\" %{GREEDYDATA:client}Message_\s*%{NUMBER:date}\-%{WORD:time}\-%{WORD:device}\-_hmcc_\s*%{NUMBER:mCC}_hmnc_\s*%{NUMBER:operateur}_radioType_\s*%{DATA:networkType}_cellTowers_\s*\[\[%{DATA:NetworkType}\, %{NUMBER:cellid}\, %{NUMBER:MNC}\, %{NUMBER:MCC}\, %{NUMBER:Operateur}\, %{NUMBER:signalstrength}\]\]\.%{GREEDYDATA:format}\"" }
           }
      date { match => [ "[@metadata][timestamp]" , "dd/MMM/yyyy:HH:mm:ss Z" ]
           }
      
           mutate{
           add_field => {"date_time" => "%{date},%{time}"}  
           convert => { "cellid" => "integer"
                        "Operateur" =>"integer" }
           remove_field =>["address", "mCC", "operateur", "networkType","address", "method", "host", "format", "client" , "message", "date", "time"]
          
          }
      date { match => [ "date_time" , "ddMMyy,HHmmss" ]
             target => "date_time"
        }
}
output{ stdout{} }

